extends /_layout/_default-layout

prepend config-block
  - const work = _.values(works).filter((work) => work.id === meta.id )[0] || {}
  - page_name = meta.title

append config-block
  - rootPath = '../../'
  - path = `works/${meta.id}/`
  - category = 'works-detail'
  - imgPath = `${rootPath}img/works/`
  - dataPath = `${rootPath}data/works/`
  - worksPath = '../'
  - title = meta.title || work.title
  - image = meta.image || work.image
  - audio = meta.audio || work.audio
  - youtube = meta.youtube || work.youtube
  - nicovideo = meta.nicovideo || work.nicovideo
  - pixiv = meta.pixiv || work.pixiv

block content-block
  +page-title

  .inner-block

    if youtube
      .video
        iframe(width="560", height="315", src=`https://www.youtube.com/embed/${youtube}`, frameborder="0", allowfullscreen)
    if nicovideo
        script(type="application/javascript", src=`http://embed.nicovideo.jp/watch/${nicovideo}/script?w=720&h=480`)
        noscript: a(href=`http://www.nicovideo.jp/watch/${nicovideo}`)
          = title
    if pixiv
      script(src="https://source.pixiv.net/source/embed.js", data-id= pixiv, data-size="large", data-border="off" charset="utf-8")
    if image
      .image
        img(src= `${imgPath}resources/${image}`)
    if audio
      .audio
        audio(src= `${dataPath}resources/${audio}`, controls)

    if body
      .desc
        -
          const bodyHtml = _.template(unescape(body), {
            interpolate: /\$\$\$([\s\S]+?)\$\$\$/g, // Markdownコマンド内でもテンプレートを書けるように "$$$ hoge $$$" のような記法を採用
          })({
            dataPath,
            imgPath,
            imageLink: (opts) => {
              const { src, alt } = opts;
              return `<span class="image-link"><img class="elm-img" src="${imgPath}${src}" alt="${alt}"></span>`;
            },
          })
        != bodyHtml
